name: Build & Test

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

env:
  CARGO_TERM_COLOR: always
  RUSTFLAGS: ${{ matrix.platform.rustflags }}
  RUST_LOG: "trace"

jobs:
  buid-test-check:
    strategy:
      matrix:
        platform: [
            {
              os: "ubuntu-latest",
              rustflags: "-Ctarget-feature=+aes,+ssse3",
            },
            {
              os: "windows-latest",
              rustflags: "-Ctarget-feature=+aes,+ssse3",
            },
            {
              os: "macos-latest",
              rustflags: "-Ctarget-feature=+aes",
            },
        ]
    runs-on: ${{ matrix.platform.os }}

    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: Install Rust nightly
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          components: clippy
      - name: Build & Test (Default)
        run: cargo test --verbose --no-fail-fast
      - name: Build & Test (Default) - shadowsocks
        run: cargo test --manifest-path ./crates/shadowsocks/Cargo.toml --verbose --no-fail-fast
      - name: Build & Test (--no-default-features)
        run: cargo test --verbose --no-default-features --no-fail-fast
      - name: Build & Test (--no-default-features) - shadowsocks
        run: cargo test --manifest-path ./crates/shadowsocks/Cargo.toml --verbose --no-default-features --no-fail-fast
      - name: Build with All Features Enabled (Unix)
        if: ${{ runner.os == 'Linux' || runner.os == 'macOS' }}
        run: cargo build --verbose --features "local-http-rustls local-redir local-dns dns-over-tls dns-over-https stream-cipher local-tun"
      - name: Build with All Features Enabled (Windows)
        if: ${{ runner.os == 'Windows' }}
        run: cargo build --verbose --features "local-http-rustls local-dns dns-over-tls dns-over-https stream-cipher"
      - name: Build with All Features Enabled - shadowsocks
        run: cargo build --manifest-path ./crates/shadowsocks/Cargo.toml --verbose --features "stream-cipher"
      - name: Clippy Check
        uses: actions-rs/clippy-check@v1
        with:
          name: clippy-${{ matrix.platform.os }}
          token: ${{ secrets.GITHUB_TOKEN }}
          args: |
            --verbose --features "local-http-rustls local-redir local-dns dns-over-tls dns-over-https stream-cipher" -- -Z macro-backtrace
            -W clippy::absurd_extreme_comparisons
            -W clippy::erasing_op
            -A clippy::collapsible_else_if

      - name: build AppleSilicon
        if: runner.os == 'macOS'
        uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: build
          args: --target aarch64-apple-darwin
